// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using System.Collections.Generic;
using Kpo4310_asadovrs.Lib;
using Kpo4310_asadovrs.Utility;

namespace Kpo4310_asadovrs.Main
{
	public partial class SearchFormViewController : NSViewController
	{
        private Substance _substance;
        public Substance substance {
            get {
                return _substance;
            }
        }

        public SearchFormViewController (IntPtr handle) : base (handle)
        {
        }

        public void SetSubstance(Substance sub)
        {
            _substance = sub;
            fillTextFields(sub);

        }

        private void fillTextFields(Substance substance)
        {
            AddButton.Enabled = false;

            TFName.Enabled = true;
            TFName.Selectable = false;
            TFName.StringValue = substance.name;

            TFType.Enabled = true;
            TFType.Selectable = false;
            TFType.StringValue = substance.type.ToString();

            TFMinTemp.Enabled = true;
            TFMinTemp.Selectable = false;
            TFMinTemp.StringValue = substance.lowTemperature.ToString();

            TFMaxTemp.Enabled = true;
            TFMaxTemp.Selectable = false;
            TFMaxTemp.StringValue = substance.highTemperature.ToString();
        }

        public void InitializeViewForAddingSubstance()
        { //Делаем активной кнопку и поля для ввода
            _substance = null;
            TFName.Enabled = true;
            TFType.Enabled = true;
            TFMinTemp.Enabled = true;
            TFMaxTemp.Enabled = true;
            AddButton.Enabled = true;
        }

        partial void ButtonAddClick(NSObject sender)
        {
            try
            {
                var substance = new Substance()
                {
                    name = TFName.StringValue,
                    type = TFType.StringValue[0],
                    highTemperature = TFMaxTemp.FloatValue,
                    lowTemperature = TFMinTemp.FloatValue
                };
                ISubFactory factory = new SubstanceFileFactory();
                SubListSaverInterface saver = factory.CreateSaver();
                saver.Substance = substance;
                saver.Execute();
                if(saver.SaveStatus == SaveStatus.Success) {
                    var alert = new NSAlert();
                    alert.MessageText = "Успех";
                    alert.InformativeText = "Вещество успешно добавлено";
                    alert.RunModal();
                }
            }
            catch (Exception e){
                var alert = new NSAlert();
                alert.MessageText = "Ошибка";
                alert.InformativeText = "Неправильно введены данные";
                alert.RunModal();
            }
        }
	}
}
